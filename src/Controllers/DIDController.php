<?php

declare(strict_types=1);

/*
 * SiskomVoiceAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SiskomVoiceAPILib\Controllers;

use Core\Request\Parameters\BodyParam;
use Core\Request\Parameters\HeaderParam;
use Core\Response\Types\ErrorType;
use CoreInterfaces\Core\Request\RequestMethod;
use SiskomVoiceAPILib\Exceptions\ApiException;
use SiskomVoiceAPILib\Exceptions\DIDBuyException;
use SiskomVoiceAPILib\Models\DIDBuyRequest;
use SiskomVoiceAPILib\Models\DIDList;
use SiskomVoiceAPILib\Models\DIDListAll;

class DIDController extends BaseController
{
    /**
     * @return DIDList Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function dIDList(): DIDList
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/did/list')
            ->auth('global')
            ->parameters(HeaderParam::init('Content-Type', 'application/json'));

        $_resHandler = $this->responseHandler()->type(DIDList::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * @param DIDBuyRequest $body
     *
     * @return void Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function dIDBuy(DIDBuyRequest $body): void
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/did/buy')
            ->auth('global')
            ->parameters(HeaderParam::init('Content-Type', 'application/json'), BodyParam::init($body));

        $_resHandler = $this->responseHandler()
            ->throwErrorOn(404, ErrorType::init('Not Found', DIDBuyException::class));

        $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * @return DIDListAll Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function dIDListAll(): DIDListAll
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/did/getall')
            ->auth('global')
            ->parameters(HeaderParam::init('Content-Type', 'application/json'));

        $_resHandler = $this->responseHandler()->type(DIDListAll::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
