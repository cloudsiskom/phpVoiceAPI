<?php

declare(strict_types=1);

/*
 * SiskomVoiceAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SiskomVoiceAPILib\Controllers;

use Core\Request\Parameters\BodyParam;
use Core\Request\Parameters\HeaderParam;
use Core\Response\Types\ErrorType;
use CoreInterfaces\Core\Request\RequestMethod;
use SiskomVoiceAPILib\Exceptions\ApiException;
use SiskomVoiceAPILib\Exceptions\TranslationDeleteException;
use SiskomVoiceAPILib\Models\TranslationDeleteRequest;
use SiskomVoiceAPILib\Models\TranslationSetup;
use SiskomVoiceAPILib\Models\TranslationSetupRequest;

class TranslationController extends BaseController
{
    /**
     * @param TranslationDeleteRequest $body
     *
     * @return void Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function translationDelete(TranslationDeleteRequest $body): void
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/translation/delete')
            ->auth('global')
            ->parameters(HeaderParam::init('Content-Type', 'application/json'), BodyParam::init($body));

        $_resHandler = $this->responseHandler()
            ->throwErrorOn(404, ErrorType::init('Not Found', TranslationDeleteException::class));

        $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * @param TranslationSetupRequest $body
     *
     * @return TranslationSetup Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function translationSetup(TranslationSetupRequest $body): TranslationSetup
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/translation/setup')
            ->auth('global')
            ->parameters(HeaderParam::init('Content-Type', 'application/json'), BodyParam::init($body));

        $_resHandler = $this->responseHandler()->type(TranslationSetup::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
