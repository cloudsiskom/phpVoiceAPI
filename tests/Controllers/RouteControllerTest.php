<?php

declare(strict_types=1);

/*
 * SiskomVoiceAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SiskomVoiceAPILib\Tests\Controllers;

use Core\TestCase\BodyMatchers\KeysBodyMatcher;
use Core\TestCase\TestParam;
use SiskomVoiceAPILib\Controllers\RouteController;
use SiskomVoiceAPILib\Exceptions;
use SiskomVoiceAPILib\Models;

class RouteControllerTest extends BaseTestController
{
    /**
     * @var RouteController RouteController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getRouteController();
    }

    public function testRouteIncoming()
    {
        // Parameters for the API call
        $body = TestParam::object(
            "{\r\n  \"did\": \"[DID]\",\r\n  \"destination\": \"[DESTINATION]\",\r\n  \"destina" .
            "tion_detail\": \"[DESTINATION_DETAIL]\"\r\n}",
            Models\RouteIncomingRequest::class
        );

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->routeIncoming($body);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json; charset=utf-8', false];
        $headers['Date'] = ['Thu, 15 Sep 2022 20:45:38 GMT', false];
        $headers['Server'] = ['Apache/2.4.41 (Ubuntu)', false];
        $headers['X-Powered-By'] = ['Express', false];
        $headers['Content-Length'] = ['88', false];
        $headers['ETag'] = ['W/"58-IvsvCU+GNJc0BQu2d3hMbwd71E0"', false];
        $headers['Keep-Alive'] = ['timeout=5, max=100', false];
        $headers['Connection'] = ['Keep-Alive', false];

        // Assert result with expected response
        $this->newTestCase($result)
        ->expectStatus(200)
        ->allowExtraHeaders()
        ->expectHeaders($headers)
        ->bodyMatcher(KeysBodyMatcher::init(
            TestParam::object("{\r\n  \"reponse\": true,\r\n  \"did\": \"6285757920463\",\r\n  \"destination\": " .
            "\"TRUNK\",\r\n  \"destination_detail\": \"CVAI\"\r\n}"),
            false,
            false
        ))
        ->assert();
    }

    public function testRouteOutgoing()
    {
        // Parameters for the API call
        $body = TestParam::object(
            "{\r\n  \"route_name\": \"[ROUTE_NAME]\",\r\n  \"device\": \"[DEVICE]\",\r\n  \"rou" .
            "te_to\": \"[ROUTE_DESTINATION]\",\r\n  \"route_detail\": \"[DESTINATION_DETAIL]\"," .
            "\r\n  \"route_prefix\": \"[PREFIX]\"\r\n}",
            Models\RouteOutgoingRequest::class
        );

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->routeOutgoing($body);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json; charset=utf-8', false];
        $headers['Date'] = ['Thu, 15 Sep 2022 20:45:44 GMT', false];
        $headers['Server'] = ['Apache/2.4.41 (Ubuntu)', false];
        $headers['X-Powered-By'] = ['Express', false];
        $headers['Content-Length'] = ['84', false];
        $headers['ETag'] = ['W/"54-aCsXts7Csjz+YBg5khKUdwfY3bc"', false];
        $headers['Keep-Alive'] = ['timeout=5, max=100', false];
        $headers['Connection'] = ['Keep-Alive', false];

        // Assert result with expected response
        $this->newTestCase($result)
        ->expectStatus(200)
        ->allowExtraHeaders()
        ->expectHeaders($headers)
        ->bodyMatcher(KeysBodyMatcher::init(
            TestParam::object(
                "{\r\n  \"response\": true,\r\n  \"device\": \"8210000000001\",\r\n  \"route_to" .
                "\": \"RANDOM\",\r\n  \"route_detail\": \"RDM1\"\r\n}"
            ),
            false,
            false
        ))
        ->assert();
    }

    public function testRouteList()
    {

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->routeList();
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json; charset=utf-8', false];
        $headers['Date'] = ['Thu, 15 Sep 2022 20:45:51 GMT', false];
        $headers['Server'] = ['Apache/2.4.41 (Ubuntu)', false];
        $headers['X-Powered-By'] = ['Express', false];
        $headers['Content-Length'] = ['1142', false];
        $headers['ETag'] = ['W/"476-s2T8UTli9V1doajU3g/roH8y3Ro"', false];
        $headers['Keep-Alive'] = ['timeout=5, max=100', false];
        $headers['Connection'] = ['Keep-Alive', false];

        // Assert result with expected response
        $this->newTestCase($result)
        ->expectStatus(200)
        ->allowExtraHeaders()
        ->expectHeaders($headers)
        ->bodyMatcher(KeysBodyMatcher::init(
            TestParam::object(
                "{\r\n  \"response\": true,\r\n  \"incoming_route\": [\r\n    {\r\n      \"id\"" .
                ": 57,\r\n      \"transaction_id\": null,\r\n      \"customer_code\": \"GOJEK\"," .
                "\r\n      \"did\": \"6285757920462\",\r\n      \"destination\": \"DTMFTEST\",\r" .
                "\n      \"destination_detail\": null,\r\n      \"create_date\": \"2022-08-23T22" .
                ":57:32.000Z\",\r\n      \"isActive\": 1\r\n    },\r\n    {\r\n      \"id\": 65," .
                "\r\n      \"transaction_id\": null,\r\n      \"customer_code\": \"GOJEK\",\r\n " .
                "     \"did\": \"6285592055238\",\r\n      \"destination\": \"CVAI\",\r\n      " .
                "\"destination_detail\": \"BANK_BKKN\",\r\n      \"create_date\": \"2022-09-01T1" .
                "7:00:23.000Z\",\r\n      \"isActive\": 1\r\n    },\r\n    {\r\n      \"id\": 69" .
                ",\r\n      \"transaction_id\": null,\r\n      \"customer_code\": \"GOJEK\",\r\n" .
                "      \"did\": \"02150995134\",\r\n      \"destination\": \"IVR\",\r\n      \"d" .
                "estination_detail\": \"TOKO_BUAH\",\r\n      \"create_date\": \"2022-09-14T02:3" .
                "7:27.000Z\",\r\n      \"isActive\": 1\r\n    },\r\n    {\r\n      \"id\": 72,\r" .
                "\n      \"transaction_id\": null,\r\n      \"customer_code\": \"GOJEK\",\r\n   " .
                "   \"did\": \"6285757920463\",\r\n      \"destination\": \"TRUNK\",\r\n      \"" .
                "destination_detail\": \"CVAI\",\r\n      \"create_date\": \"2022-09-16T03:45:38" .
                ".000Z\",\r\n      \"isActive\": 1\r\n    }\r\n  ],\r\n  \"outgoing_route\": [\r" .
                "\n    {\r\n      \"id\": 582,\r\n      \"customer_code\": \"GOJEK\",\r\n      " .
                "\"extension\": \"ALL\",\r\n      \"route_to\": \"PROVIDER\",\r\n      \"route_d" .
                "etail\": \"6285592055236\",\r\n      \"tech_prefix\": \"\",\r\n      \"create_d" .
                "ate\": \"2022-09-14T19:40:24.000Z\",\r\n      \"isActive\": 1\r\n    },\r\n    " .
                "{\r\n      \"id\": 583,\r\n      \"customer_code\": \"GOJEK\",\r\n      \"exten" .
                "sion\": \"8210000000001\",\r\n      \"route_to\": \"RANDOM\",\r\n      \"route_" .
                "detail\": \"RDM1\",\r\n      \"tech_prefix\": \"198767\",\r\n      \"create_dat" .
                "e\": \"2022-09-16T03:45:44.000Z\",\r\n      \"isActive\": 1\r\n    }\r\n  ]\r\n" .
                "}"
            ),
            false,
            false
        ))
        ->assert();
    }
}
