<?php

declare(strict_types=1);

/*
 * SiskomVoiceAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SiskomVoiceAPILib\Tests\Controllers;

use Core\TestCase\BodyMatchers\KeysBodyMatcher;
use Core\TestCase\TestParam;
use SiskomVoiceAPILib\Controllers\QueueController;
use SiskomVoiceAPILib\Exceptions;
use SiskomVoiceAPILib\Models;

class QueueControllerTest extends BaseTestController
{
    /**
     * @var QueueController QueueController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getQueueController();
    }

    public function testQueueNew()
    {
        // Parameters for the API call
        $body = TestParam::object(
            "{\r\n  \"queue_name\": \"[QUEUE_NAME]\",\r\n  \"ring_strategy\": \"[RING_STRATEGY]\"\r\n}",
            Models\QueueNewRequest::class
        );

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->queueNew($body);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json; charset=utf-8', false];
        $headers['Date'] = ['Thu, 15 Sep 2022 20:44:43 GMT', false];
        $headers['Server'] = ['Apache/2.4.41 (Ubuntu)', false];
        $headers['X-Powered-By'] = ['Express', false];
        $headers['Content-Length'] = ['79', false];
        $headers['ETag'] = ['W/"4f-Pm8ErkUg5MQatcjKuYgVfenBRlM"', false];
        $headers['Keep-Alive'] = ['timeout=5, max=100', false];
        $headers['Connection'] = ['Keep-Alive', false];

        // Assert result with expected response
        $this->newTestCase($result)
        ->expectStatus(200)
        ->allowExtraHeaders()
        ->expectHeaders($headers)
        ->bodyMatcher(KeysBodyMatcher::init(
            TestParam::object(
                "{\r\n  \"response\": true,\r\n  \"data\": {\r\n    \"queue_name\": \"queue-151" .
                "-3\",\r\n    \"ring_strategy\": \"ringall\"\r\n  }\r\n}"
            ),
            false,
            false
        ))
        ->assert();
    }

    public function testQueueList()
    {

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->queueList();
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json; charset=utf-8', false];
        $headers['Date'] = ['Thu, 15 Sep 2022 20:44:57 GMT', false];
        $headers['Server'] = ['Apache/2.4.41 (Ubuntu)', false];
        $headers['X-Powered-By'] = ['Express', false];
        $headers['Content-Length'] = ['249', false];
        $headers['ETag'] = ['W/"f9-ytnirxkrYqUaZov2iKcBs0P0xoc"', false];
        $headers['Keep-Alive'] = ['timeout=5, max=100', false];
        $headers['Connection'] = ['Keep-Alive', false];

        // Assert result with expected response
        $this->newTestCase($result)
        ->expectStatus(200)
        ->allowExtraHeaders()
        ->expectHeaders($headers)
        ->bodyMatcher(KeysBodyMatcher::init(
            TestParam::object("{\r\n  \"response\": true,\r\n  \"data\": [\r\n    {\r\n      \"queue_id\": 35,\r" .
            "\n      \"queue_name\": \"96789665\",\r\n      \"musiclass\": \"default\",\r\n     " .
            " \"strategy\": \"ringall\",\r\n      \"members\": [\r\n        {\r\n          \"mem" .
            "ber\": \"SIP/968976567\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"queu" .
            "e_id\": 36,\r\n      \"queue_name\": \"96queue-151-3\",\r\n      \"musiclass\": \"d" .
            "efault\",\r\n      \"strategy\": \"ringall\",\r\n      \"members\": []\r\n    }\r\n" .
            "  ]\r\n}"),
            false,
            false
        ))
        ->assert();
    }
}
