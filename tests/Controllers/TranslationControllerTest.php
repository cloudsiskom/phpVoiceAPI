<?php

declare(strict_types=1);

/*
 * SiskomVoiceAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SiskomVoiceAPILib\Tests\Controllers;

use Core\TestCase\BodyMatchers\KeysBodyMatcher;
use Core\TestCase\TestParam;
use SiskomVoiceAPILib\Controllers\TranslationController;
use SiskomVoiceAPILib\Exceptions;
use SiskomVoiceAPILib\Models;

class TranslationControllerTest extends BaseTestController
{
    /**
     * @var TranslationController TranslationController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getTranslationController();
    }

    public function testTranslationSetup()
    {
        // Parameters for the API call
        $body = TestParam::object(
            "{\r\n  \"from_number\": \"[FROM_NUMBER]\",\r\n  \"caller_didgateway\": \"[DID_GATE" .
            "WAY]\",\r\n  \"called_didgateway\": \"[DID_GATEWAY]\",\r\n  \"destination_number\":" .
            " \"[DESTINATION]\",\r\n  \"external_id\": \"[EXTERNAL_ID]\"\r\n}",
            Models\TranslationSetupRequest::class
        );

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->translationSetup($body);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json; charset=utf-8', false];
        $headers['Date'] = ['Thu, 15 Sep 2022 20:43:24 GMT', false];
        $headers['Server'] = ['Apache/2.4.41 (Ubuntu)', false];
        $headers['X-Powered-By'] = ['Express', false];
        $headers['Content-Length'] = ['243', false];
        $headers['ETag'] = ['W/"f3-KXAo2itnuz7b8+bqgH5vs1lpX5A"', false];
        $headers['Keep-Alive'] = ['timeout=5, max=100', false];
        $headers['Connection'] = ['Keep-Alive', false];

        // Assert result with expected response
        $this->newTestCase($result)
        ->expectStatus(200)
        ->allowExtraHeaders()
        ->expectHeaders($headers)
        ->bodyMatcher(KeysBodyMatcher::init(
            TestParam::object(
                "{\r\n  \"respose\": true,\r\n  \"action\": \"setup\",\r\n  \"transaction_id\":" .
                " \"cf54bfa60c738515574809998f71bd62\",\r\n  \"external_id\": \"1000\",\r\n  \"f" .
                "rom_number\": \"62811949736\",\r\n  \"destination_number\": \"6285161422932\"," .
                "\r\n  \"caller_didgateway\": \"6285757920463\",\r\n  \"called_didgateway\": \"6" .
                "285757920463\"\r\n}"
            ),
            false,
            false
        ))
        ->assert();
    }
}
